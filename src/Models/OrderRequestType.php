<?php

declare(strict_types=1);

/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PplusSubscriptionPapiLib\Models;

use PplusSubscriptionPapiLib\ApiHelper;
use PplusSubscriptionPapiLib\Utils\DateTimeHelper;
use stdClass;

class OrderRequestType implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $orderNumber;

    /**
     * @var \DateTime|null
     */
    private $orderDate;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string|null
     */
    private $subscriptionModelName;

    /**
     * @var string|null
     */
    private $storeCode;

    /**
     * @var bool|null
     */
    private $swapTitle;

    /**
     * @var bool|null
     */
    private $sendEmail;

    /**
     * @var Account|null
     */
    private $account;

    /**
     * @var OrderRequestTypeSubscription[]|null
     */
    private $orderRequestTypeSubscriptions;

    /**
     * @var OrderRequestProcessingOptions|null
     */
    private $orderRequestProcessingOptions;

    /**
     * @var OrderRequestTypeProduct[]|null
     */
    private $orderRequestTypeProducts;

    /**
     * @var CustomField[]|null
     */
    private $customFields;

    /**
     * @var array|null
     */
    private $paymentCapture;

    /**
     * Returns Order Number.
     * Hybris/PMC/OASIS Order Number.
     */
    public function getOrderNumber(): ?string
    {
        return $this->orderNumber;
    }

    /**
     * Sets Order Number.
     * Hybris/PMC/OASIS Order Number.
     *
     * @maps orderNumber
     */
    public function setOrderNumber(?string $orderNumber): void
    {
        $this->orderNumber = $orderNumber;
    }

    /**
     * Returns Order Date.
     * The date when the order is signed. All the order actions under this order will use this order date
     * as the contract effective date if the contract effective date field is skipped or its value is left
     * as null.
     */
    public function getOrderDate(): ?\DateTime
    {
        return $this->orderDate;
    }

    /**
     * Sets Order Date.
     * The date when the order is signed. All the order actions under this order will use this order date
     * as the contract effective date if the contract effective date field is skipped or its value is left
     * as null.
     *
     * @maps orderDate
     * @factory \PplusSubscriptionPapiLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setOrderDate(?\DateTime $orderDate): void
    {
        $this->orderDate = $orderDate;
    }

    /**
     * Returns Description.
     * A description of the order.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * A description of the order.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Subscription Model Name.
     * Subscription Model Name.
     */
    public function getSubscriptionModelName(): ?string
    {
        return $this->subscriptionModelName;
    }

    /**
     * Sets Subscription Model Name.
     * Subscription Model Name.
     *
     * @maps subscriptionModelName
     */
    public function setSubscriptionModelName(?string $subscriptionModelName): void
    {
        $this->subscriptionModelName = $subscriptionModelName;
    }

    /**
     * Returns Store Code.
     * store identifier
     */
    public function getStoreCode(): ?string
    {
        return $this->storeCode;
    }

    /**
     * Sets Store Code.
     * store identifier
     *
     * @maps storeCode
     */
    public function setStoreCode(?string $storeCode): void
    {
        $this->storeCode = $storeCode;
    }

    /**
     * Returns Swap Title.
     * Use for swapTitle.If swaptitle than value will be true.
     */
    public function getSwapTitle(): ?bool
    {
        return $this->swapTitle;
    }

    /**
     * Sets Swap Title.
     * Use for swapTitle.If swaptitle than value will be true.
     *
     * @maps swapTitle
     */
    public function setSwapTitle(?bool $swapTitle): void
    {
        $this->swapTitle = $swapTitle;
    }

    /**
     * Returns Send Email.
     * send email to the user
     */
    public function getSendEmail(): ?bool
    {
        return $this->sendEmail;
    }

    /**
     * Sets Send Email.
     * send email to the user
     *
     * @maps sendEmail
     */
    public function setSendEmail(?bool $sendEmail): void
    {
        $this->sendEmail = $sendEmail;
    }

    /**
     * Returns Account.
     */
    public function getAccount(): ?Account
    {
        return $this->account;
    }

    /**
     * Sets Account.
     *
     * @maps account
     */
    public function setAccount(?Account $account): void
    {
        $this->account = $account;
    }

    /**
     * Returns Order Request Type Subscriptions.
     * new account details required to create subscription. This block is mandate for new customer
     *
     * @return OrderRequestTypeSubscription[]|null
     */
    public function getOrderRequestTypeSubscriptions(): ?array
    {
        return $this->orderRequestTypeSubscriptions;
    }

    /**
     * Sets Order Request Type Subscriptions.
     * new account details required to create subscription. This block is mandate for new customer
     *
     * @maps orderRequestTypeSubscriptions
     *
     * @param OrderRequestTypeSubscription[]|null $orderRequestTypeSubscriptions
     */
    public function setOrderRequestTypeSubscriptions(?array $orderRequestTypeSubscriptions): void
    {
        $this->orderRequestTypeSubscriptions = $orderRequestTypeSubscriptions;
    }

    /**
     * Returns Order Request Processing Options.
     * Invoice or Payment.
     */
    public function getOrderRequestProcessingOptions(): ?OrderRequestProcessingOptions
    {
        return $this->orderRequestProcessingOptions;
    }

    /**
     * Sets Order Request Processing Options.
     * Invoice or Payment.
     *
     * @maps orderRequestProcessingOptions
     */
    public function setOrderRequestProcessingOptions(
        ?OrderRequestProcessingOptions $orderRequestProcessingOptions
    ): void {
        $this->orderRequestProcessingOptions = $orderRequestProcessingOptions;
    }

    /**
     * Returns Order Request Type Products.
     *
     * @return OrderRequestTypeProduct[]|null
     */
    public function getOrderRequestTypeProducts(): ?array
    {
        return $this->orderRequestTypeProducts;
    }

    /**
     * Sets Order Request Type Products.
     *
     * @maps orderRequestTypeProducts
     *
     * @param OrderRequestTypeProduct[]|null $orderRequestTypeProducts
     */
    public function setOrderRequestTypeProducts(?array $orderRequestTypeProducts): void
    {
        $this->orderRequestTypeProducts = $orderRequestTypeProducts;
    }

    /**
     * Returns Custom Fields.
     * Information about the payment related fields.
     *
     * @return CustomField[]|null
     */
    public function getCustomFields(): ?array
    {
        return $this->customFields;
    }

    /**
     * Sets Custom Fields.
     * Information about the payment related fields.
     *
     * @maps customFields
     *
     * @param CustomField[]|null $customFields
     */
    public function setCustomFields(?array $customFields): void
    {
        $this->customFields = $customFields;
    }

    /**
     * Returns Payment Capture.
     */
    public function getPaymentCapture(): ?array
    {
        return $this->paymentCapture;
    }

    /**
     * Sets Payment Capture.
     *
     * @maps paymentCapture
     */
    public function setPaymentCapture(?array $paymentCapture): void
    {
        $this->paymentCapture = $paymentCapture;
    }

    /**
     * Converts the OrderRequestType object to a human-readable string representation.
     *
     * @return string The string representation of the OrderRequestType object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'OrderRequestType',
            [
                'orderNumber' => $this->orderNumber,
                'orderDate' => $this->orderDate,
                'description' => $this->description,
                'subscriptionModelName' => $this->subscriptionModelName,
                'storeCode' => $this->storeCode,
                'swapTitle' => $this->swapTitle,
                'sendEmail' => $this->sendEmail,
                'account' => $this->account,
                'orderRequestTypeSubscriptions' => $this->orderRequestTypeSubscriptions,
                'orderRequestProcessingOptions' => $this->orderRequestProcessingOptions,
                'orderRequestTypeProducts' => $this->orderRequestTypeProducts,
                'customFields' => $this->customFields,
                'paymentCapture' => $this->paymentCapture
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->orderNumber)) {
            $json['orderNumber']                   = $this->orderNumber;
        }
        if (isset($this->orderDate)) {
            $json['orderDate']                     = DateTimeHelper::toSimpleDate($this->orderDate);
        }
        if (isset($this->description)) {
            $json['description']                   = $this->description;
        }
        if (isset($this->subscriptionModelName)) {
            $json['subscriptionModelName']         = $this->subscriptionModelName;
        }
        if (isset($this->storeCode)) {
            $json['storeCode']                     = $this->storeCode;
        }
        if (isset($this->swapTitle)) {
            $json['swapTitle']                     = $this->swapTitle;
        }
        if (isset($this->sendEmail)) {
            $json['sendEmail']                     = $this->sendEmail;
        }
        if (isset($this->account)) {
            $json['account']                       = $this->account;
        }
        if (isset($this->orderRequestTypeSubscriptions)) {
            $json['orderRequestTypeSubscriptions'] = $this->orderRequestTypeSubscriptions;
        }
        if (isset($this->orderRequestProcessingOptions)) {
            $json['orderRequestProcessingOptions'] = $this->orderRequestProcessingOptions;
        }
        if (isset($this->orderRequestTypeProducts)) {
            $json['orderRequestTypeProducts']      = $this->orderRequestTypeProducts;
        }
        if (isset($this->customFields)) {
            $json['customFields']                  = $this->customFields;
        }
        if (isset($this->paymentCapture)) {
            $json['paymentCapture']                = $this->paymentCapture;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

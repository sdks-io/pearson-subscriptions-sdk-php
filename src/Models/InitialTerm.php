<?php

declare(strict_types=1);

/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PplusSubscriptionPapiLib\Models;

use PplusSubscriptionPapiLib\ApiHelper;
use stdClass;

/**
 * Information about the first term of the subscription.
 */
class InitialTerm implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $startDate;

    /**
     * @var string|null
     */
    private $endDate;

    /**
     * @var int|null
     */
    private $period;

    /**
     * @var string|null
     */
    private $periodType;

    /**
     * @var string|null
     */
    private $termType;

    /**
     * Returns Start Date.
     * Start date of the first term, in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     */
    public function getStartDate(): ?string
    {
        return $this->startDate;
    }

    /**
     * Sets Start Date.
     * Start date of the first term, in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     *
     * @maps startDate
     */
    public function setStartDate(?string $startDate): void
    {
        $this->startDate = $startDate;
    }

    /**
     * Returns End Date.
     * End data of a subscription. in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     */
    public function getEndDate(): ?string
    {
        return $this->endDate;
    }

    /**
     * Sets End Date.
     * End data of a subscription. in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     *
     * @maps endDate
     */
    public function setEndDate(?string $endDate): void
    {
        $this->endDate = $endDate;
    }

    /**
     * Returns Period.
     * Duration of the first term in months, years, days, or weeks, depending on the value of the
     * `periodType` field. Only applicable if the value of the `termType` field is `TERMED`.
     */
    public function getPeriod(): ?int
    {
        return $this->period;
    }

    /**
     * Sets Period.
     * Duration of the first term in months, years, days, or weeks, depending on the value of the
     * `periodType` field. Only applicable if the value of the `termType` field is `TERMED`.
     *
     * @maps period
     */
    public function setPeriod(?int $period): void
    {
        $this->period = $period;
    }

    /**
     * Returns Period Type.
     * Unit of time that the renewal term is measured in.
     */
    public function getPeriodType(): ?string
    {
        return $this->periodType;
    }

    /**
     * Sets Period Type.
     * Unit of time that the renewal term is measured in.
     *
     * @maps periodType
     * @factory \PplusSubscriptionPapiLib\Models\PeriodTypeEnum::checkValue
     */
    public function setPeriodType(?string $periodType): void
    {
        $this->periodType = $periodType;
    }

    /**
     * Returns Term Type.
     * Type of the first term. If the value of this field is `TERMED`, the first term has a predefined
     * duration based on the value of the `period` field. If the value of this field is `EVERGREEN`, the
     * first term does not have a predefined duration.
     */
    public function getTermType(): ?string
    {
        return $this->termType;
    }

    /**
     * Sets Term Type.
     * Type of the first term. If the value of this field is `TERMED`, the first term has a predefined
     * duration based on the value of the `period` field. If the value of this field is `EVERGREEN`, the
     * first term does not have a predefined duration.
     *
     * @maps termType
     * @factory \PplusSubscriptionPapiLib\Models\TermTypeEnum::checkValue
     */
    public function setTermType(?string $termType): void
    {
        $this->termType = $termType;
    }

    /**
     * Converts the InitialTerm object to a human-readable string representation.
     *
     * @return string The string representation of the InitialTerm object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'InitialTerm',
            [
                'startDate' => $this->startDate,
                'endDate' => $this->endDate,
                'period' => $this->period,
                'periodType' => $this->periodType,
                'termType' => $this->termType
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->startDate)) {
            $json['startDate']  = $this->startDate;
        }
        if (isset($this->endDate)) {
            $json['endDate']    = $this->endDate;
        }
        if (isset($this->period)) {
            $json['period']     = $this->period;
        }
        if (isset($this->periodType)) {
            $json['periodType'] = PeriodTypeEnum::checkValue($this->periodType);
        }
        if (isset($this->termType)) {
            $json['termType']   = TermTypeEnum::checkValue($this->termType);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

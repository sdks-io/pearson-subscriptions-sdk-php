<?php

declare(strict_types=1);

/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PplusSubscriptionPapiLib\Models;

use PplusSubscriptionPapiLib\ApiHelper;
use stdClass;

class UpdateOrderOrderAction implements \JsonSerializable
{
    /**
     * @var TriggerDate[]|null
     */
    private $triggerDates;

    /**
     * @var AddProduct|null
     */
    private $addProduct;

    /**
     * @var RemoveProduct|null
     */
    private $removeProduct;

    /**
     * @var TermsAndConditions|null
     */
    private $termsAndConditions;

    /**
     * Returns Trigger Dates.
     *
     * @return TriggerDate[]|null
     */
    public function getTriggerDates(): ?array
    {
        return $this->triggerDates;
    }

    /**
     * Sets Trigger Dates.
     *
     * @maps triggerDates
     *
     * @param TriggerDate[]|null $triggerDates
     */
    public function setTriggerDates(?array $triggerDates): void
    {
        $this->triggerDates = $triggerDates;
    }

    /**
     * Returns Add Product.
     * Information about an order action of type `addProduct`.
     *
     * If you want to create a pending order through the "Add product" order action, and if the charge's
     * trigger condition is `Specific Date`, you must set a charge number in the `chargeNumber` field for
     * the "Add product" order action.
     */
    public function getAddProduct(): ?AddProduct
    {
        return $this->addProduct;
    }

    /**
     * Sets Add Product.
     * Information about an order action of type `addProduct`.
     *
     * If you want to create a pending order through the "Add product" order action, and if the charge's
     * trigger condition is `Specific Date`, you must set a charge number in the `chargeNumber` field for
     * the "Add product" order action.
     *
     * @maps addProduct
     */
    public function setAddProduct(?AddProduct $addProduct): void
    {
        $this->addProduct = $addProduct;
    }

    /**
     * Returns Remove Product.
     * Remove product details from the subscription plan
     */
    public function getRemoveProduct(): ?RemoveProduct
    {
        return $this->removeProduct;
    }

    /**
     * Sets Remove Product.
     * Remove product details from the subscription plan
     *
     * @maps removeProduct
     */
    public function setRemoveProduct(?RemoveProduct $removeProduct): void
    {
        $this->removeProduct = $removeProduct;
    }

    /**
     * Returns Terms and Conditions.
     * change the terms and conditions of a subscription .
     */
    public function getTermsAndConditions(): ?TermsAndConditions
    {
        return $this->termsAndConditions;
    }

    /**
     * Sets Terms and Conditions.
     * change the terms and conditions of a subscription .
     *
     * @maps termsAndConditions
     */
    public function setTermsAndConditions(?TermsAndConditions $termsAndConditions): void
    {
        $this->termsAndConditions = $termsAndConditions;
    }

    /**
     * Converts the UpdateOrderOrderAction object to a human-readable string representation.
     *
     * @return string The string representation of the UpdateOrderOrderAction object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'UpdateOrderOrderAction',
            [
                'triggerDates' => $this->triggerDates,
                'addProduct' => $this->addProduct,
                'removeProduct' => $this->removeProduct,
                'termsAndConditions' => $this->termsAndConditions
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->triggerDates)) {
            $json['triggerDates']       = $this->triggerDates;
        }
        if (isset($this->addProduct)) {
            $json['addProduct']         = $this->addProduct;
        }
        if (isset($this->removeProduct)) {
            $json['removeProduct']      = $this->removeProduct;
        }
        if (isset($this->termsAndConditions)) {
            $json['termsAndConditions'] = $this->termsAndConditions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

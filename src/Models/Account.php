<?php

declare(strict_types=1);

/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PplusSubscriptionPapiLib\Models;

use PplusSubscriptionPapiLib\ApiHelper;
use stdClass;

/**
 * The information of the new account to be created with the order. Note
 * that this actually specifies the invoice owner account of the
 * subscriptions included in this order. To create the new account,
 * either a **creditCard** structure or the
 * **hpmCreditCardPaymentMethodId** field (but not both) should be
 * provided. The one provided becomes the default payment method for this
 * account. If the credit card information is declined or can't be
 * verified, then the account is not created.
 */
class Account implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountNumber;

    /**
     * @var string|null
     */
    private $additionalEmailAddresses;

    /**
     * @var string|null
     */
    private $customerServiceRepName;

    /**
     * @var string|null
     */
    private $purchaseOrderNumber;

    /**
     * @var string|null
     */
    private $salesRep;

    /**
     * @var string|null
     */
    private $sequenceSetId;

    /**
     * @var bool|null
     */
    private $allowInvoiceEdit = false;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var int|null
     */
    private $billCycleDay;

    /**
     * @var bool|null
     */
    private $invoiceDeliveryPrefsPrint = false;

    /**
     * @var bool|null
     */
    private $invoiceDeliveryPrefsEmail = false;

    /**
     * @var bool|null
     */
    private $autoPay = true;

    /**
     * @var string|null
     */
    private $paymentTerm;

    /**
     * @var string|null
     */
    private $communicationProfileId;

    /**
     * @var string|null
     */
    private $batch;

    /**
     * @var string|null
     */
    private $invoiceTemplateId;

    /**
     * @var string|null
     */
    private $debitMemoTemplateId;

    /**
     * @var string|null
     */
    private $creditMemoTemplateId;

    /**
     * @var BillToContactPostOrder|null
     */
    private $billToContact;

    /**
     * @var BillToContactPostOrder|null
     */
    private $soldToContact;

    /**
     * Returns Account Number.
     */
    public function getAccountNumber(): ?string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     *
     * @maps accountNumber
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Additional Email Addresses.
     * List of additional email addresses to receive emailed invoices. Values should be a comma-separated
     * list of email addresses.
     */
    public function getAdditionalEmailAddresses(): ?string
    {
        return $this->additionalEmailAddresses;
    }

    /**
     * Sets Additional Email Addresses.
     * List of additional email addresses to receive emailed invoices. Values should be a comma-separated
     * list of email addresses.
     *
     * @maps additionalEmailAddresses
     */
    public function setAdditionalEmailAddresses(?string $additionalEmailAddresses): void
    {
        $this->additionalEmailAddresses = $additionalEmailAddresses;
    }

    /**
     * Returns Customer Service Rep Name.
     * Name of the account's customer service representative, if applicable.
     */
    public function getCustomerServiceRepName(): ?string
    {
        return $this->customerServiceRepName;
    }

    /**
     * Sets Customer Service Rep Name.
     * Name of the account's customer service representative, if applicable.
     *
     * @maps customerServiceRepName
     */
    public function setCustomerServiceRepName(?string $customerServiceRepName): void
    {
        $this->customerServiceRepName = $customerServiceRepName;
    }

    /**
     * Returns Purchase Order Number.
     * The number of the purchase order associated with this account. Purchase order information generally
     * comes from customers.
     */
    public function getPurchaseOrderNumber(): ?string
    {
        return $this->purchaseOrderNumber;
    }

    /**
     * Sets Purchase Order Number.
     * The number of the purchase order associated with this account. Purchase order information generally
     * comes from customers.
     *
     * @maps purchaseOrderNumber
     */
    public function setPurchaseOrderNumber(?string $purchaseOrderNumber): void
    {
        $this->purchaseOrderNumber = $purchaseOrderNumber;
    }

    /**
     * Returns Sales Rep.
     * The name of the sales representative associated with this account, if applicable.
     */
    public function getSalesRep(): ?string
    {
        return $this->salesRep;
    }

    /**
     * Sets Sales Rep.
     * The name of the sales representative associated with this account, if applicable.
     *
     * @maps salesRep
     */
    public function setSalesRep(?string $salesRep): void
    {
        $this->salesRep = $salesRep;
    }

    /**
     * Returns Sequence Set Id.
     * The ID of the billing document sequence set to assign to the customer account.
     *
     * The billing documents to generate for this account will adopt the prefix and starting document
     * number configured in the sequence set.
     */
    public function getSequenceSetId(): ?string
    {
        return $this->sequenceSetId;
    }

    /**
     * Sets Sequence Set Id.
     * The ID of the billing document sequence set to assign to the customer account.
     *
     * The billing documents to generate for this account will adopt the prefix and starting document
     * number configured in the sequence set.
     *
     * @maps sequenceSetId
     */
    public function setSequenceSetId(?string $sequenceSetId): void
    {
        $this->sequenceSetId = $sequenceSetId;
    }

    /**
     * Returns Allow Invoice Edit.
     * Indicates if associated invoices can be edited.
     * Values are:
     *
     * * `true`
     * * `false` (default)
     */
    public function getAllowInvoiceEdit(): ?bool
    {
        return $this->allowInvoiceEdit;
    }

    /**
     * Sets Allow Invoice Edit.
     * Indicates if associated invoices can be edited.
     * Values are:
     *
     * * `true`
     * * `false` (default)
     *
     * @maps allowInvoiceEdit
     */
    public function setAllowInvoiceEdit(?bool $allowInvoiceEdit): void
    {
        $this->allowInvoiceEdit = $allowInvoiceEdit;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Currency.
     * 3 uppercase character currency code
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     * 3 uppercase character currency code
     *
     * @maps currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Bill Cycle Day.
     * Day of the month that the account prefers billing periods to begin on. If set to 0, the bill cycle
     * day will be set as "AutoSet".
     */
    public function getBillCycleDay(): ?int
    {
        return $this->billCycleDay;
    }

    /**
     * Sets Bill Cycle Day.
     * Day of the month that the account prefers billing periods to begin on. If set to 0, the bill cycle
     * day will be set as "AutoSet".
     *
     * @maps billCycleDay
     */
    public function setBillCycleDay(?int $billCycleDay): void
    {
        $this->billCycleDay = $billCycleDay;
    }

    /**
     * Returns Invoice Delivery Prefs Print.
     * Specifies whether to turn on the invoice delivery method 'Print' for the new account.
     * Values are:
     *
     * * `true`. Turn on the invoice delivery method 'Print' for the new account.
     * * `false` (default). Turn off the invoice delivery method 'Print' for the new account.
     */
    public function getInvoiceDeliveryPrefsPrint(): ?bool
    {
        return $this->invoiceDeliveryPrefsPrint;
    }

    /**
     * Sets Invoice Delivery Prefs Print.
     * Specifies whether to turn on the invoice delivery method 'Print' for the new account.
     * Values are:
     *
     * * `true`. Turn on the invoice delivery method 'Print' for the new account.
     * * `false` (default). Turn off the invoice delivery method 'Print' for the new account.
     *
     * @maps invoiceDeliveryPrefsPrint
     */
    public function setInvoiceDeliveryPrefsPrint(?bool $invoiceDeliveryPrefsPrint): void
    {
        $this->invoiceDeliveryPrefsPrint = $invoiceDeliveryPrefsPrint;
    }

    /**
     * Returns Invoice Delivery Prefs Email.
     * Specifies whether to turn on the invoice delivery method 'Email' for the new account.
     * Values are:
     *
     * * `true` (default). Turn on the invoice delivery method 'Email' for the new account.
     * * `false`. Turn off the invoice delivery method 'Email' for the new account.
     */
    public function getInvoiceDeliveryPrefsEmail(): ?bool
    {
        return $this->invoiceDeliveryPrefsEmail;
    }

    /**
     * Sets Invoice Delivery Prefs Email.
     * Specifies whether to turn on the invoice delivery method 'Email' for the new account.
     * Values are:
     *
     * * `true` (default). Turn on the invoice delivery method 'Email' for the new account.
     * * `false`. Turn off the invoice delivery method 'Email' for the new account.
     *
     * @maps invoiceDeliveryPrefsEmail
     */
    public function setInvoiceDeliveryPrefsEmail(?bool $invoiceDeliveryPrefsEmail): void
    {
        $this->invoiceDeliveryPrefsEmail = $invoiceDeliveryPrefsEmail;
    }

    /**
     * Returns Auto Pay.
     * Specifies whether future payments are to be automatically billed when they are due. Possible values
     * are `true`, `false`.
     */
    public function getAutoPay(): ?bool
    {
        return $this->autoPay;
    }

    /**
     * Sets Auto Pay.
     * Specifies whether future payments are to be automatically billed when they are due. Possible values
     * are `true`, `false`.
     *
     * @maps autoPay
     */
    public function setAutoPay(?bool $autoPay): void
    {
        $this->autoPay = $autoPay;
    }

    /**
     * Returns Payment Term.
     */
    public function getPaymentTerm(): ?string
    {
        return $this->paymentTerm;
    }

    /**
     * Sets Payment Term.
     *
     * @maps paymentTerm
     */
    public function setPaymentTerm(?string $paymentTerm): void
    {
        $this->paymentTerm = $paymentTerm;
    }

    /**
     * Returns Communication Profile Id.
     * aaa.
     */
    public function getCommunicationProfileId(): ?string
    {
        return $this->communicationProfileId;
    }

    /**
     * Sets Communication Profile Id.
     * aaa.
     *
     * @maps communicationProfileId
     */
    public function setCommunicationProfileId(?string $communicationProfileId): void
    {
        $this->communicationProfileId = $communicationProfileId;
    }

    /**
     * Returns Batch.
     * Organizes your customer accounts into groups to optimize your billing and payment operations.
     */
    public function getBatch(): ?string
    {
        return $this->batch;
    }

    /**
     * Sets Batch.
     * Organizes your customer accounts into groups to optimize your billing and payment operations.
     *
     * @maps batch
     */
    public function setBatch(?string $batch): void
    {
        $this->batch = $batch;
    }

    /**
     * Returns Invoice Template Id.
     * Invoice template ID, configured in Billing Settings.
     */
    public function getInvoiceTemplateId(): ?string
    {
        return $this->invoiceTemplateId;
    }

    /**
     * Sets Invoice Template Id.
     * Invoice template ID, configured in Billing Settings.
     *
     * @maps invoiceTemplateId
     */
    public function setInvoiceTemplateId(?string $invoiceTemplateId): void
    {
        $this->invoiceTemplateId = $invoiceTemplateId;
    }

    /**
     * Returns Debit Memo Template Id.
     * The unique ID of the debit memo template, configured in Billing Settings.
     */
    public function getDebitMemoTemplateId(): ?string
    {
        return $this->debitMemoTemplateId;
    }

    /**
     * Sets Debit Memo Template Id.
     * The unique ID of the debit memo template, configured in Billing Settings.
     *
     * @maps debitMemoTemplateId
     */
    public function setDebitMemoTemplateId(?string $debitMemoTemplateId): void
    {
        $this->debitMemoTemplateId = $debitMemoTemplateId;
    }

    /**
     * Returns Credit Memo Template Id.
     * The unique ID of the credit memo template, configured in Billing Settings.
     */
    public function getCreditMemoTemplateId(): ?string
    {
        return $this->creditMemoTemplateId;
    }

    /**
     * Sets Credit Memo Template Id.
     * The unique ID of the credit memo template, configured in Billing Settings.
     *
     * @maps creditMemoTemplateId
     */
    public function setCreditMemoTemplateId(?string $creditMemoTemplateId): void
    {
        $this->creditMemoTemplateId = $creditMemoTemplateId;
    }

    /**
     * Returns Bill to Contact.
     */
    public function getBillToContact(): ?BillToContactPostOrder
    {
        return $this->billToContact;
    }

    /**
     * Sets Bill to Contact.
     *
     * @maps billToContact
     */
    public function setBillToContact(?BillToContactPostOrder $billToContact): void
    {
        $this->billToContact = $billToContact;
    }

    /**
     * Returns Sold to Contact.
     */
    public function getSoldToContact(): ?BillToContactPostOrder
    {
        return $this->soldToContact;
    }

    /**
     * Sets Sold to Contact.
     *
     * @maps soldToContact
     */
    public function setSoldToContact(?BillToContactPostOrder $soldToContact): void
    {
        $this->soldToContact = $soldToContact;
    }

    /**
     * Converts the Account object to a human-readable string representation.
     *
     * @return string The string representation of the Account object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Account',
            [
                'accountNumber' => $this->accountNumber,
                'additionalEmailAddresses' => $this->additionalEmailAddresses,
                'customerServiceRepName' => $this->customerServiceRepName,
                'purchaseOrderNumber' => $this->purchaseOrderNumber,
                'salesRep' => $this->salesRep,
                'sequenceSetId' => $this->sequenceSetId,
                'allowInvoiceEdit' => $this->allowInvoiceEdit,
                'name' => $this->name,
                'currency' => $this->currency,
                'billCycleDay' => $this->billCycleDay,
                'invoiceDeliveryPrefsPrint' => $this->invoiceDeliveryPrefsPrint,
                'invoiceDeliveryPrefsEmail' => $this->invoiceDeliveryPrefsEmail,
                'autoPay' => $this->autoPay,
                'paymentTerm' => $this->paymentTerm,
                'communicationProfileId' => $this->communicationProfileId,
                'batch' => $this->batch,
                'invoiceTemplateId' => $this->invoiceTemplateId,
                'debitMemoTemplateId' => $this->debitMemoTemplateId,
                'creditMemoTemplateId' => $this->creditMemoTemplateId,
                'billToContact' => $this->billToContact,
                'soldToContact' => $this->soldToContact
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountNumber)) {
            $json['accountNumber']             = $this->accountNumber;
        }
        if (isset($this->additionalEmailAddresses)) {
            $json['additionalEmailAddresses']  = $this->additionalEmailAddresses;
        }
        if (isset($this->customerServiceRepName)) {
            $json['customerServiceRepName']    = $this->customerServiceRepName;
        }
        if (isset($this->purchaseOrderNumber)) {
            $json['purchaseOrderNumber']       = $this->purchaseOrderNumber;
        }
        if (isset($this->salesRep)) {
            $json['salesRep']                  = $this->salesRep;
        }
        if (isset($this->sequenceSetId)) {
            $json['sequenceSetId']             = $this->sequenceSetId;
        }
        if (isset($this->allowInvoiceEdit)) {
            $json['allowInvoiceEdit']          = $this->allowInvoiceEdit;
        }
        if (isset($this->name)) {
            $json['name']                      = $this->name;
        }
        if (isset($this->currency)) {
            $json['currency']                  = $this->currency;
        }
        if (isset($this->billCycleDay)) {
            $json['billCycleDay']              = $this->billCycleDay;
        }
        if (isset($this->invoiceDeliveryPrefsPrint)) {
            $json['invoiceDeliveryPrefsPrint'] = $this->invoiceDeliveryPrefsPrint;
        }
        if (isset($this->invoiceDeliveryPrefsEmail)) {
            $json['invoiceDeliveryPrefsEmail'] = $this->invoiceDeliveryPrefsEmail;
        }
        if (isset($this->autoPay)) {
            $json['autoPay']                   = $this->autoPay;
        }
        if (isset($this->paymentTerm)) {
            $json['paymentTerm']               = $this->paymentTerm;
        }
        if (isset($this->communicationProfileId)) {
            $json['communicationProfileId']    = $this->communicationProfileId;
        }
        if (isset($this->batch)) {
            $json['batch']                     = $this->batch;
        }
        if (isset($this->invoiceTemplateId)) {
            $json['invoiceTemplateId']         = $this->invoiceTemplateId;
        }
        if (isset($this->debitMemoTemplateId)) {
            $json['debitMemoTemplateId']       = $this->debitMemoTemplateId;
        }
        if (isset($this->creditMemoTemplateId)) {
            $json['creditMemoTemplateId']      = $this->creditMemoTemplateId;
        }
        if (isset($this->billToContact)) {
            $json['billToContact']             = $this->billToContact;
        }
        if (isset($this->soldToContact)) {
            $json['soldToContact']             = $this->soldToContact;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}

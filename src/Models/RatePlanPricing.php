<?php

declare(strict_types=1);

/*
 * PearsonSubscriptionsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PearsonSubscriptionsAPILib\Models;

use PearsonSubscriptionsAPILib\ApiHelper;
use stdClass;

class RatePlanPricing implements \JsonSerializable
{
    /**
     * @var Discount|null
     */
    private $discount;

    /**
     * @var RecurringFlatFee|null
     */
    private $recurringFlatFee;

    /**
     * Returns Discount.
     */
    public function getDiscount(): ?Discount
    {
        return $this->discount;
    }

    /**
     * Sets Discount.
     *
     * @maps discount
     */
    public function setDiscount(?Discount $discount): void
    {
        $this->discount = $discount;
    }

    /**
     * Returns Recurring Flat Fee.
     */
    public function getRecurringFlatFee(): ?RecurringFlatFee
    {
        return $this->recurringFlatFee;
    }

    /**
     * Sets Recurring Flat Fee.
     *
     * @maps recurringFlatFee
     */
    public function setRecurringFlatFee(?RecurringFlatFee $recurringFlatFee): void
    {
        $this->recurringFlatFee = $recurringFlatFee;
    }

    /**
     * Converts the RatePlanPricing object to a human-readable string representation.
     *
     * @return string The string representation of the RatePlanPricing object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'RatePlanPricing',
            ['discount' => $this->discount, 'recurringFlatFee' => $this->recurringFlatFee]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->discount)) {
            $json['discount']         = $this->discount;
        }
        if (isset($this->recurringFlatFee)) {
            $json['recurringFlatFee'] = $this->recurringFlatFee;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
